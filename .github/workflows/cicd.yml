name: Build and Publish docker image

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    services:
      postgres_customer:
        image: postgres:13.1
        env:
          POSTGRES_DB: customer
          POSTGRES_USER: ayeshascode
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      postgres_fraud:
        image: postgres:13.1
        env:
          POSTGRES_DB: fraud
          POSTGRES_USER: ayeshascode
          POSTGRES_PASSWORD: password
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: '3.8.6'

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn -X --batch-mode --update-snapshots clean verify -f pom.xml

      - name: Packaging customer workflow data as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: customer-jar
          path: customer/target/*.jar
          retention-days: 1

      - name: Packaging fraud workflow data as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: fraud-jar
          path: fraud/target/*.jar
          retention-days: 1

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push customer Docker image
        id: push_customer
        uses: docker/build-push-action@v5
        with:
          context: customer
          file: customer/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/customer-management-customer-service:${{ github.sha }}

      - name: Build and push fraud Docker image
        id: push_fraud
        uses: docker/build-push-action@v5
        with:
          context: fraud
          file: fraud/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/customer-management-fraud-service:${{ github.sha }}


